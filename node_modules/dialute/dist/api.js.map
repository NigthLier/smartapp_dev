{"version":3,"file":"api.js","sourceRoot":"","sources":["../src/api.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:max-classes-per-file */\nimport type {\n  ServerAction,\n  MessageType,\n  Payload,\n  FullRequest,\n  MESSAGE_TO_SKILL,\n  Message,\n  SERVER_ACTION,\n  Character,\n  Device,\n} from './intefaces';\n\nexport class SberRequest {\n  body: FullRequest;\n  nlu: NLU;\n\n  constructor(request: any) {\n    this.body = request;\n    if (this.type === 'MESSAGE_TO_SKILL') {\n      this.nlu = new NLU(\n        (this.pld as MESSAGE_TO_SKILL).message.tokenized_elements_list\n      );\n    }\n  }\n\n  get type(): MessageType {\n    return this.body.messageName;\n  }\n\n  get pld(): Payload {\n    return this.body.payload;\n  }\n\n  get msg(): string | undefined {\n    if (this.type === 'MESSAGE_TO_SKILL' || this.type === 'CLOSE_APP') {\n      return (this.pld as MESSAGE_TO_SKILL).message.original_text;\n    }\n  }\n\n  get msgFull(): Message | undefined {\n    if (this.type === 'MESSAGE_TO_SKILL' || this.type === 'CLOSE_APP') {\n      return (this.pld as MESSAGE_TO_SKILL).message;\n    }\n  }\n\n  get act(): ServerAction | undefined {\n    if (this.type === 'SERVER_ACTION') {\n      return (this.pld as SERVER_ACTION).server_action;\n    }\n  }\n\n  get char(): Character {\n    return this.pld.character;\n  }\n\n  get charGender(): string {\n    return this.pld.character.gender;\n  }\n\n  get charName(): string {\n    return this.pld.character.name;\n  }\n\n  get device(): Device {\n    return this.pld.device;\n  }\n\n  get userId(): string {\n    // return this.body.sessionId; Always changes on SberPortal for each message!\n    return this.body.uuid.userId;\n    // return this.body.uuid.sub;\n  }\n\n  clone(another: SberRequest) {\n    this.body = another.body;\n    this.nlu = another.nlu;\n  }\n\n  buildRsp(): SberResponse {\n    return new SberResponse(this);\n  }\n}\n\nexport class SberResponse {\n  request: SberRequest;\n  body: any;\n  pld: any;\n\n  constructor(request: SberRequest) {\n    this.request = request;\n    this.body = {\n      ...request.body,\n      payload: { device: request.device },\n    };\n    this.body.messageName = 'ANSWER_TO_USER';\n    this.pld = this.body.payload;\n    this.pld.items = [];\n  }\n\n  set msg(text: string) {\n    this.pld.items = this.pld.items.filter((v: any) => !v.bubble);\n    this.pld.items.push({ bubble: { text } });\n    this.pld.pronounceText = text;\n  }\n\n  set msgJ(text: string) {\n    if (this.request.pld.character.id === 'joy') {\n      this.msg = text;\n    }\n  }\n\n  set msgS(text: string) {\n    if (this.request.pld.character.id === 'sber') {\n      this.msg = text;\n    }\n  }\n\n  set msgA(text: string) {\n    if (this.request.pld.character.id === 'athena') {\n      this.msg = text;\n    }\n  }\n\n  set data(value: any) {\n    this.pld.items = this.pld.items.filter((obj: any) =>\n      obj.command ? obj.command.type.smart_app_data : true\n    );\n    this.pld.items.push({\n      command: { type: 'smart_app_data', smart_app_data: value },\n    });\n  }\n\n  set act(value: any) {\n    this.pld.items = this.pld.items.filter((obj: any) =>\n      obj.command ? obj.command.type.action : true\n    );\n    this.pld.items.push({ command: { type: 'action', action: value } });\n  }\n\n  set kbrd(buttons: string[]) {\n    const formed = [];\n    for (const button of buttons) {\n      formed.push({ title: button, action: { text: button, type: 'text' } });\n    }\n\n    this.pld.suggestions = this.pld.suggestions || {};\n    this.pld.suggestions.buttons = formed;\n    // {'title': obj.text, 'action': {'text': obj.text, 'type': 'text'}}\n  }\n\n  set end(value: boolean) {\n    this.pld.finished = value;\n  }\n\n  get end(): boolean {\n    return this.pld.finished || false;\n  }\n\n  set listen(value: boolean) {\n    this.pld.auto_listening = value;\n  }\n}\n\nclass Token {\n  part: string;\n  type: string;\n  lemma: string;\n  text: string;\n\n  constructor(token: any) {\n    this.part = token.grammem_info.part_of_speech;\n    this.type = token.token_type;\n    this.lemma = token.lemma;\n    this.text = token.text;\n  }\n}\n\nclass NLU {\n  tokens: Token[] = [];\n  lemmas: string[] = [];\n  types: string[] = [];\n  parts: string[] = [];\n  texts: string[] = [];\n\n  constructor(elements: any) {\n    for (const element of elements) {\n      if (!element.hasOwnProperty('grammem_info')) {\n        continue;\n      }\n      const token = new Token(element);\n      this.tokens.push(token);\n      this.lemmas.push(token.lemma);\n      this.types.push(token.type);\n      this.parts.push(token.part);\n      this.texts.push(token.text);\n    }\n  }\n\n  lemmaIntersection(lemmas: string[]) {\n    const lemmasSet = new Set(this.lemmas);\n    let counter = 0;\n    for (const lemma of lemmas) {\n      if (lemmasSet.has(lemma)) {\n        counter++;\n      }\n    }\n    return counter;\n  }\n}\n"]}