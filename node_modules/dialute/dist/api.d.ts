import type { ServerAction, MessageType, Payload, FullRequest, Message, Character, Device } from './intefaces';
export declare class SberRequest {
    body: FullRequest;
    nlu: NLU;
    constructor(request: any);
    get type(): MessageType;
    get pld(): Payload;
    get msg(): string | undefined;
    get msgFull(): Message | undefined;
    get act(): ServerAction | undefined;
    get char(): Character;
    get charGender(): string;
    get charName(): string;
    get device(): Device;
    get userId(): string;
    clone(another: SberRequest): void;
    buildRsp(): SberResponse;
}
export declare class SberResponse {
    request: SberRequest;
    body: any;
    pld: any;
    constructor(request: SberRequest);
    set msg(text: string);
    set msgJ(text: string);
    set msgS(text: string);
    set msgA(text: string);
    set data(value: any);
    set act(value: any);
    set kbrd(buttons: string[]);
    set end(value: boolean);
    get end(): boolean;
    set listen(value: boolean);
}
declare class Token {
    part: string;
    type: string;
    lemma: string;
    text: string;
    constructor(token: any);
}
declare class NLU {
    tokens: Token[];
    lemmas: string[];
    types: string[];
    parts: string[];
    texts: string[];
    constructor(elements: any);
    lemmaIntersection(lemmas: string[]): number;
}
export {};
